name: Performance benchmark

on:
  push:
#    branches:
#      - '*'
    tags:
      - 'bench*'

env:
  DEBUG_CI: false

jobs:    
  bench:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Linux BLAS"
            os: ubuntu-22.04
            mode: Release
            enable_R: on
            install_blas: sudo apt install -qy libblas3 libblas-dev

          - name: "Linux OpenBLAS"
            os: ubuntu-22.04
            mode: Release
            enable_R: on
            install_blas: sudo apt install -qy libopenblas-base libopenblas-dev

          - name: "Linux Intel MKL"
            os: ubuntu-22.04
            mode: Release
            enable_R: on
            install_blas: sudo apt install -qy intel-mkl-full

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
        if: matrix.enable_R == 'on'

      - name: Define local variables
        shell: bash
        run: |
          echo "MODE=${{matrix.mode}}"     >> $GITHUB_ENV
          echo "ENABLE_PYTHON_BINDING=off" >> $GITHUB_ENV
          echo "ENABLE_OCTAVE_BINDING=off" >> $GITHUB_ENV
          echo "ENABLE_R_BINDING=on"       >> $GITHUB_ENV

      - name: Define local variables Unix Like
        shell: bash
        run: |
          if [ "${ENABLE_R_BINDING}" == "on" ]; then
            echo "BUILD_NAME=r-linux-macos"  >> $GITHUB_ENV
          else
            echo "BUILD_NAME=linux-macos"    >> $GITHUB_ENV
          fi
        if: runner.os != 'Windows'

      - name: Define local variables Windows
        shell: bash
        run: |
          if [ "${ENABLE_OCTAVE_BINDING}" == "on" ]; then
            echo "BUILD_NAME=octave-windows" >> $GITHUB_ENV
          elif [ "${ENABLE_R_BINDING}" == "on" ]; then
            echo "BUILD_NAME=r-windows"      >> $GITHUB_ENV
          else
            echo "BUILD_NAME=windows"        >> $GITHUB_ENV
          fi
        if: runner.os == 'Windows'

      - name: pre-install-linux
        shell: bash
        run: |
          if [ "${{matrix.force_update}}" == "on" ]; then
            sudo apt update
          fi
          sudo apt install liblapack-dev python3-pip clang-tidy
          if [ "${ENABLE_OCTAVE_BINDING}" == "on" ]; then
            sudo apt install -qy octave liboctave-dev
          fi
          if [ "${ENABLE_R_BINDING}" == "on" ]; then
            sudo apt install -qy liblapack-dev gfortran # r-base
          fi
        if: runner.os == 'Linux' # or use $RUNNER_OS

      - name: pre-install-windows for Python
        shell: bash
        run: |
          # add alternative name python3 (default is python)
          PYTHON_CMD_PATH=$(which python)
          PYTHON_CMD_DIR=$(dirname "${PYTHON_CMD_PATH}")
          PYTHON_ALT_CMD_PATH="${PYTHON_CMD_DIR}/python3.exe"
          ln -s "${PYTHON_CMD_PATH}" "${PYTHON_ALT_CMD_PATH}"
        if: runner.os == 'Windows' && matrix.enable_python == 'on'

      - name: install BLAS
        shell: bash
        run: ${{matrix.install_blas}}

      - name: install
        shell: bash
        run: .travis-ci/${BUILD_NAME}/install.sh

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.24.x'

      - name: before_script
        shell: bash
        run: .travis-ci/common/before_script.sh

      - name: script
        shell: bash
        run: .travis-ci/${BUILD_NAME}/build.sh

      - name: bench
        shell: bash
        run: |
          sudo apt install -qy pandoc texlive-full && sudo Rscript -e "if (!('rmarkdown' %in% installed.packages())) install.packages('rmarkdown',repos='https://cloud.r-project.org/')"
          cd bindings/R && chmod a+x bench_perf-full.sh && sudo ./bench_perf-full.sh
      
      - name: report 
        uses: actions/upload-artifact@v4
        with:
          name: report-${{matrix.name}}
          path: |
            bindings/R/*.log
            bindings/R/*.out
            bindings/R/*.Rout
            bindings/R/*.pdf
